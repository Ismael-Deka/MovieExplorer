{"ast":null,"code":"import _slicedToArray from\"/root/hw-milestone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import Card from\"../components/ui/js/Card\";import classes from\"./LoginPage.module.css\";import card_classes from\"../components/ui/css/Card.module.css\";import Backdrop from\"../components/ui/js/Backdrop\";import LoginErrorDialog from\"../components/ui/js/LoginErrorDialog\";import SumbitButton from'../components/ui/js/SumbitButton';import{Navigate}from'react-router';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SignupPage(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),IsErrorDialogOpen=_useState2[0],setIsErrorDialogOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isRedirecting=_useState4[0],setisRedirecting=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),userNameText=_useState6[0],setUserNameText=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),dialogMessage=_useState8[0],setDialogMessage=_useState8[1];function setUserName(text){setUserNameText(text.target.value);}function showCloseHandler(){setIsErrorDialogOpen(true);}function hideCloseHandler(){setIsErrorDialogOpen(false);}function signUp(){var requestOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:userNameText})};fetch(\"/signup\",requestOptions).then(function(reponse){return reponse.json().then(function(data){if(data.user_already_exists==true){setDialogMessage([\"That username is already in use. \",/*#__PURE__*/_jsx(\"a\",{href:\"/\",children:\"Log in.\"})]);showCloseHandler();}else if(data.account_created==true){setDialogMessage([\"Account successfully created!\"]);showCloseHandler();setisRedirecting(true);}});});}function redirectBackToLogin(){useHistory.push(\"/\");}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Card,{stylecard:card_classes.logincard+\" \"+card_classes.centerform,children:/*#__PURE__*/_jsxs(\"div\",{className:classes.login,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.welcome_logo,children:\"Sign up to Movie Explorer\"}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/\",children:\"Log in.\"})]}),/*#__PURE__*/_jsx(\"input\",{className:classes.username,type:\"text\",placeholder:\"Enter Username\",onChange:setUserName,onKeyPress:function onKeyPress(event){if(event.key=='Enter'){signUp();}}}),/*#__PURE__*/_jsx(SumbitButton,{onClick:signUp}),IsErrorDialogOpen&&/*#__PURE__*/_jsx(LoginErrorDialog,{onCancel:hideCloseHandler,message:dialogMessage,onRedirect:redirectBackToLogin,isRedirect:isRedirecting}),IsErrorDialogOpen&&/*#__PURE__*/_jsx(Backdrop,{onClick:hideCloseHandler})]})})});}export default SignupPage;","map":{"version":3,"sources":["/root/hw-milestone/src/pages/SignupPage.js"],"names":["useState","Card","classes","card_classes","Backdrop","LoginErrorDialog","SumbitButton","Navigate","SignupPage","IsErrorDialogOpen","setIsErrorDialogOpen","isRedirecting","setisRedirecting","userNameText","setUserNameText","dialogMessage","setDialogMessage","setUserName","text","target","value","showCloseHandler","hideCloseHandler","signUp","requestOptions","method","headers","body","JSON","stringify","username","fetch","then","reponse","json","data","user_already_exists","account_created","redirectBackToLogin","useHistory","push","logincard","centerform","login","welcome_logo","event","key"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Card from \"../components/ui/js/Card\";\nimport classes from \"./LoginPage.module.css\";\nimport card_classes from \"../components/ui/css/Card.module.css\"\nimport Backdrop from \"../components/ui/js/Backdrop\";\nimport LoginErrorDialog from \"../components/ui/js/LoginErrorDialog\";\nimport SumbitButton from '../components/ui/js/SumbitButton';\nimport { Navigate } from 'react-router';\n\n\nfunction SignupPage() {\n\n    const [IsErrorDialogOpen, setIsErrorDialogOpen] = useState(false);\n\n    const [isRedirecting, setisRedirecting] = useState(false);\n\n    const [userNameText, setUserNameText] = useState(\"\");\n\n    const [dialogMessage, setDialogMessage] = useState(\"\");\n\n\n\n\n\n    function setUserName(text) {\n        setUserNameText(text.target.value);\n    }\n\n    function showCloseHandler() {\n        setIsErrorDialogOpen(true);\n\n    }\n\n    function hideCloseHandler() {\n        setIsErrorDialogOpen(false);\n\n    }\n\n    function signUp() {\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username: userNameText })\n        };\n        fetch(\"/signup\", requestOptions).then(reponse =>\n            reponse.json().then(data => {\n\n                if (data.user_already_exists == true) {\n                    setDialogMessage([\"That username is already in use. \", <a href=\"/\">Log in.</a>])\n                    showCloseHandler();\n                } else if (data.account_created == true) {\n                    setDialogMessage([\"Account successfully created!\"])\n                    showCloseHandler();\n                    setisRedirecting(true);\n                }\n            }\n            )\n        )\n    }\n\n    function redirectBackToLogin() {\n        useHistory.push(\"/\");\n    }\n\n    return (\n        <div>\n            <Card stylecard={card_classes.logincard + \" \" + card_classes.centerform}>\n                <div className={classes.login}>\n                    <div className={classes.welcome_logo}>Sign up to Movie Explorer</div>\n                    <div>Already have an account? <a href=\"/\">Log in.</a></div>\n\n                    <input className={classes.username} type=\"text\"\n                        placeholder='Enter Username'\n                        onChange={setUserName}\n                        onKeyPress={event => {\n                            if (event.key == 'Enter') {\n                                signUp();\n                            }\n                        }} />\n\n                    <SumbitButton onClick={signUp} />\n\n                    {IsErrorDialogOpen && <LoginErrorDialog onCancel={hideCloseHandler} message={dialogMessage} onRedirect={redirectBackToLogin} isRedirect={isRedirecting} />}\n                    {IsErrorDialogOpen && <Backdrop onClick={hideCloseHandler} />}\n                </div>\n            </Card>\n        </div>);\n}\n\nexport default SignupPage"]},"metadata":{},"sourceType":"module"}